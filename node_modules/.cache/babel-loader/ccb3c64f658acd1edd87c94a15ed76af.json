{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Noah Wotring\\\\Desktop\\\\Code\\\\ReactUserDataPractice\\\\my-app\\\\src\\\\pages\\\\ZombieMath.js\";\nimport React, { useState, userContext, useEffect } from 'react';\nimport './zombie_math.css';\nimport { UserContext } from \"../providers/UserProvider\";\n\nconst ZombieMath = props => {\n  const user = props.user;\n  const [gameIsRunning, runGame] = useState(false);\n  const [timeLeft, changeTime] = useState(0);\n  const [timerIsRunning, toggleTimer] = useState(false);\n  const [score, changeScore] = useState(0);\n  const [currentAnswer, changeAnswer] = useState(0);\n  const [lifepoints, changeLifePoints] = useState(5);\n  const [numberSet, genNumbers] = useState({\n    num1: null,\n    num2: null,\n    answer: null\n  }); //\n  //effect that checks game state, starts timer toggle on\n\n  useEffect(() => {\n    if (gameIsRunning) {\n      toggleTimer(!timerIsRunning);\n    }\n  }, [gameIsRunning]); //countdown timer. after render/click/toggle game/toggle timer, this runs\n\n  useEffect(() => {\n    let interval = null;\n\n    if (timerIsRunning) {\n      interval = setInterval(() => {\n        changeTime(timeLeft - 1);\n      }, 1000);\n    }\n\n    if (timerIsRunning && timeLeft === 0) {\n      clearInterval(interval);\n    }\n\n    if (lifepoints === 0) {\n      alert(\"gameOver\");\n      clearInterval(interval);\n      toggleGame(!gameIsRunning);\n    }\n\n    return () => clearInterval(interval);\n  }, [timerIsRunning, timeLeft]);\n\n  const generateNumbers = () => {\n    let num1 = Math.floor(Math.random() * 100);\n    let num2 = Math.floor(Math.random() * 100);\n    let answer = num1 + num2;\n    genNumbers({\n      num1: num1,\n      num2: num2,\n      answer: answer\n    });\n  };\n\n  let intervalHandle;\n  useEffect(() => {\n    if (gameIsRunning) {\n      generateNumbers();\n    }\n  }, [gameIsRunning]);\n\n  const onChangeHandler = event => {\n    const {\n      name,\n      value\n    } = event.currentTarget;\n\n    if (name === \"currentAnswer\") {\n      changeAnswer(value);\n    }\n  };\n\n  const handleAnswerSubmit = () => {\n    if (currentAnswer === numberSet.answer.toString()) {\n      changeScore(score + 1);\n      changeTime(10);\n      generateNumbers();\n      changeAnswer(0);\n    } else {\n      alert(\"your answer was \" + document.querySelector('#answerAttempt').value + \", which is FALSE, the current answer is \" + numberSet.answer);\n      changeLifePoints(lifepoints - 1);\n      generateNumbers();\n      changeAnswer(0);\n    }\n  };\n\n  const handleKeyDown = e => {\n    console.log(e.key);\n\n    if (e.key == \"Enter\") {\n      handleAnswerSubmit();\n    }\n  };\n\n  const toggleGame = () => {\n    generateNumbers();\n    changeTime(10);\n    runGame(!gameIsRunning);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"zombie_math_background text-center block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  }, \" \", timeLeft, \" \"), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 8\n    }\n  }, \" Hello, your score is \", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"bg-red-200 border-blue-300 border\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 34\n    }\n  }, score, \" \"), \" \"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bg-gray-400 w-1/2 h-32 container block my-auto mx-auto border border-red-200 relative\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"number container mx-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"num1 inline-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 11\n    }\n  }, numberSet.num1, \" \"), \" + \", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"num2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 74\n    }\n  }, numberSet.num2, \" =\", /*#__PURE__*/React.createElement(\"input\", {\n    autofocus: true,\n    onKeyDown: e => {\n      handleKeyDown(e);\n    },\n    type: \"integer\",\n    className: \"w-1/12 \",\n    name: \"currentAnswer\",\n    value: currentAnswer,\n    placeholder: \"\",\n    id: \"answerAttempt\",\n    onChange: event => onChangeHandler(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 11\n    }\n  }), \" \")), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"  border border-blue-500\",\n    onClick: () => handleAnswerSubmit(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }\n  }, \"Click Here \"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \" absolute bottom-0 right-0 border border-blue-500\",\n    onClick: toggleGame,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }\n  }, \"Click Here \")));\n};\n\nexport default ZombieMath;","map":{"version":3,"sources":["C:/Users/Noah Wotring/Desktop/Code/ReactUserDataPractice/my-app/src/pages/ZombieMath.js"],"names":["React","useState","userContext","useEffect","UserContext","ZombieMath","props","user","gameIsRunning","runGame","timeLeft","changeTime","timerIsRunning","toggleTimer","score","changeScore","currentAnswer","changeAnswer","lifepoints","changeLifePoints","numberSet","genNumbers","num1","num2","answer","interval","setInterval","clearInterval","alert","toggleGame","generateNumbers","Math","floor","random","intervalHandle","onChangeHandler","event","name","value","currentTarget","handleAnswerSubmit","toString","document","querySelector","handleKeyDown","e","console","log","key"],"mappings":"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","sourcesContent":["import React, {useState,userContext,useEffect} from 'react';\r\nimport './zombie_math.css';\r\nimport {UserContext} from \"../providers/UserProvider\";\r\n\r\nconst ZombieMath = (props) => {\r\n  const user = props.user;\r\n  const [gameIsRunning, runGame] = useState(false);\r\n  const [timeLeft,changeTime] = useState(0);\r\n  const [timerIsRunning,toggleTimer] = useState(false);\r\n  const [score,changeScore] = useState(0);\r\n  const [currentAnswer,changeAnswer] = useState(0);\r\n  const [lifepoints,changeLifePoints] = useState(5);\r\n  const [numberSet, genNumbers] = useState({\r\n    num1: null,\r\n    num2: null,\r\n    answer: null\r\n  });\r\n\r\n  //\r\n\r\n  //effect that checks game state, starts timer toggle on\r\n  useEffect(() => {\r\n    if(gameIsRunning){\r\n      toggleTimer(!timerIsRunning);\r\n    }\r\n  },[gameIsRunning])\r\n\r\n  //countdown timer. after render/click/toggle game/toggle timer, this runs\r\n  useEffect(() => {\r\n    let interval = null;\r\n    if(timerIsRunning){\r\n      interval = setInterval(() => {\r\n        changeTime(timeLeft - 1)\r\n      }, 1000)\r\n    }\r\n    if (timerIsRunning && timeLeft === 0){\r\n      clearInterval(interval);\r\n    }\r\n    if(lifepoints === 0){\r\n      alert(\"gameOver\");\r\n      clearInterval(interval);\r\n      toggleGame(!gameIsRunning);\r\n    }\r\n\r\n    return () => clearInterval(interval);\r\n  },[timerIsRunning,timeLeft]);\r\n\r\n  const generateNumbers = () => {\r\n        let num1 = Math.floor(Math.random() * 100);\r\n        let num2 = Math.floor(Math.random() * 100);\r\n        let answer = num1 + num2;\r\n        genNumbers({\r\n          num1: num1,\r\n          num2: num2,\r\n          answer: answer\r\n        })\r\n      }\r\n      let intervalHandle;\r\n  useEffect(() => {\r\n    if(gameIsRunning){\r\n      generateNumbers()\r\n    }\r\n  },[gameIsRunning])\r\n\r\n\r\n\r\n\r\n\r\n  const onChangeHandler = (event) => {\r\n    const {name,value} = event.currentTarget;\r\n    if(name === \"currentAnswer\"){\r\n      changeAnswer(value)\r\n    }\r\n  }\r\n\r\n  const handleAnswerSubmit = () => {\r\n    if(currentAnswer === numberSet.answer.toString()){\r\n      changeScore(score + 1);\r\n      changeTime(10);\r\n      generateNumbers();\r\n      changeAnswer(0);\r\n    } else {\r\n      alert(\"your answer was \" + document.querySelector('#answerAttempt').value  + \", which is FALSE, the current answer is \" + numberSet.answer)\r\n      changeLifePoints(lifepoints-1);\r\n      generateNumbers();\r\n      changeAnswer(0);\r\n    }\r\n  }\r\n\r\n  const handleKeyDown = (e) => {\r\n    console.log(e.key)\r\n    if (e.key == \"Enter\"){\r\n      handleAnswerSubmit();\r\n    }\r\n  }\r\n\r\n\r\n\r\n  const toggleGame = () => {\r\n    generateNumbers();\r\n    changeTime(10);\r\n\r\n    runGame(!gameIsRunning);\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n      <div className=\"zombie_math_background text-center block\">\r\n        <h1> {timeLeft} </h1>\r\n\r\n       <h1> Hello, your score is <span className=\"bg-red-200 border-blue-300 border\">{score} </span> </h1>\r\n       <div className=\"bg-gray-400 w-1/2 h-32 container block my-auto mx-auto border border-red-200 relative\">\r\n        <div className=\"number container mx-0\">\r\n          <span className=\"num1 inline-block\">{numberSet.num1} </span> + <span className=\"num2\">{numberSet.num2} =\r\n          <input\r\n            autofocus\r\n            onKeyDown={e=>{handleKeyDown(e)}}\r\n            type=\"integer\"\r\n            className=\"w-1/12 \"\r\n            name=\"currentAnswer\"\r\n            value={currentAnswer}\r\n            placeholder=\"\"\r\n            id=\"answerAttempt\"\r\n            onChange = {(event)=> onChangeHandler(event)}\r\n            /> </span>\r\n        </div>\r\n        <button className=\"  border border-blue-500\" onClick={() => handleAnswerSubmit() }>Click Here </button>\r\n\r\n        <button className=\" absolute bottom-0 right-0 border border-blue-500\" onClick={toggleGame}>Click Here </button>\r\n       </div>\r\n\r\n\r\n\r\n        </div>\r\n  )\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\nexport default ZombieMath;\r\n"]},"metadata":{},"sourceType":"module"}