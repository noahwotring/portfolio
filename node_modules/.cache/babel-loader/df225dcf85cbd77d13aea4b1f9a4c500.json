{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\Noah Wotring\\\\Desktop\\\\Code\\\\portfolio\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState,useContext,useEffect}from'react';import'./css/zombie_math.css';import{UserContext}from\"../providers/UserProvider\";import{generateScore}from'../firebase.js';var ZombieMath=function ZombieMath(props){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),gameIsRunning=_useState2[0],setRunGame=_useState2[1];var _useState3=useState(0),_useState4=_slicedToArray(_useState3,2),timeLeft=_useState4[0],setTime=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),timerIsRunning=_useState6[0],setTimer=_useState6[1];var _useState7=useState(0),_useState8=_slicedToArray(_useState7,2),score=_useState8[0],changeScore=_useState8[1];var _useState9=useState(\"\"),_useState10=_slicedToArray(_useState9,2),currentAnswer=_useState10[0],changeAnswer=_useState10[1];var _useState11=useState(5),_useState12=_slicedToArray(_useState11,2),hp=_useState12[0],setHealth=_useState12[1];var _useState13=useState({num1:null,num2:null,answer:null}),_useState14=_slicedToArray(_useState13,2),numberSet=_useState14[0],genNumbers=_useState14[1];var user=useContext(UserContext);var _useState15=useState(0),_useState16=_slicedToArray(_useState15,2),highScore=_useState16[0],updateHighScore=_useState16[1];var _useState17=useState([]),_useState18=_slicedToArray(_useState17,2),allScores=_useState18[0],updateAllScores=_useState18[1];var updateGenerateScores=function updateGenerateScores(){generateScore().then(function(result){return updateAllScores(result);});updateHighScore(user?allScores.filter(function(score){return score.uid==user.uid;}).sort(function(a,b){return a.score-b.score;})[0]:allScores.sort(function(a,b){return a.score-b.score;})[0]);console.log(allScores);};useEffect(updateGenerateScores,[score]);//\n//effect that checks game state, starts timer toggle on\n// game is turned on\nvar activateGame=function activateGame(){generateNumbers();setHealth(5);setTime(10);setTimer(true);};useEffect(function(){if(gameIsRunning){activateGame();}},[gameIsRunning]);//countdown timer. after render/click/toggle game/toggle timer, this runs\nuseEffect(function(){var interval=null;if(timerIsRunning){interval=setInterval(function(){setTime(timeLeft-1);},1000);}if(timerIsRunning&&timeLeft===0&&hp>=1){setHealth(hp-1);generateNumbers();setTime(10);}if(timeLeft<1&&hp<1){clearInterval(interval);setRunGame(false);}if(hp===0){setRunGame(false);if(user){// send data + user\n}else{// send data\n}setRunGame(false);}},[timerIsRunning,timeLeft]);//number set generator\nvar generateNumbers=function generateNumbers(){var num1=Math.floor(Math.random()*100);var num2=Math.floor(Math.random()*100);var answer=num1+num2;genNumbers({num1:num1,num2:num2,answer:answer});};var toggleGame=function toggleGame(){if(gameIsRunning===false){setRunGame(!gameIsRunning);}else{setRunGame(!gameIsRunning);}};useEffect(function(){if(gameIsRunning){var theWidth=hp*20;document.querySelector('.health').style.width=\"\".concat(theWidth,\"%\");}},[hp]);var onChangeHandler=function onChangeHandler(event){var _event$currentTarget=event.currentTarget,name=_event$currentTarget.name,value=_event$currentTarget.value;if(name===\"currentAnswer\"){changeAnswer(value);}};var handleAnswerSubmit=function handleAnswerSubmit(){if(currentAnswer===numberSet.answer.toString()){changeScore(score+1);setTime(10);generateNumbers();changeAnswer(\"\");}else{setHealth(hp-1);setTime(10);document.querySelector('.problemBlock').classList.add('hit');document.querySelector('.problemBlock').addEventListener('transitionend',removeTransition);generateNumbers();changeAnswer(\"\");}};var handleKeyDown=function handleKeyDown(e){console.log(e.key);if(e.key===\"Enter\"){handleAnswerSubmit();}};var removeTransition=function removeTransition(e){e.target.classList.remove('hit');};//the containers\nvar numberContainer=/*#__PURE__*/React.createElement(\"div\",{className:\"number container mx-0 problemBlock\"},/*#__PURE__*/React.createElement(\"span\",{className:\"healthbar health\"},hp*20,\"% \"),/*#__PURE__*/React.createElement(\"span\",{className:\"block text-6xl\"},\" \",/*#__PURE__*/React.createElement(\"span\",{className:\"num1 numblock inline-block text-6xl\"},numberSet.num1,\" \"),\" + \",/*#__PURE__*/React.createElement(\"span\",{className:\"num2 numblock text-6xl\"},numberSet.num2,\" =\",/*#__PURE__*/React.createElement(\"input\",{autoFocus:true,onKeyDown:function onKeyDown(e){handleKeyDown(e);},autocomplete:\"off\",type:\"integer\",className:\"w-1/12 text-black  \",name:\"currentAnswer\",value:currentAnswer,placeholder:\"\",id:\"answerAttempt\",onChange:function onChange(event){return onChangeHandler(event);}}),\" \")));//<div className=\"bg-gray-400 w-1/2 h-32 container block my-auto mx-auto border border-red-200 relative\"> </div>\nvar startButtonContainer=/*#__PURE__*/React.createElement(\"button\",{className:\" absolute bottom-0 right-0 border border-blue-500\",onClick:toggleGame},\"Start Game \");return/*#__PURE__*/React.createElement(\"div\",{className:\"zombie_math_background text-center inline\"},/*#__PURE__*/React.createElement(\"h1\",null,\" \",timeLeft,\" \",hp,\" \"),/*#__PURE__*/React.createElement(\"h1\",null,\" Hello \",user?\"\".concat(user.displayName):\"Joe\",\", your score is \",/*#__PURE__*/React.createElement(\"span\",{className:\"bg-red-200 border-blue-300 border\"},score,\" \"),\" and your highest score is \",highScore),/*#__PURE__*/React.createElement(\"div\",{className:\"problemBlock\"},gameIsRunning?numberContainer:startButtonContainer,/*#__PURE__*/React.createElement(\"button\",{className:\"  border border-blue-500\",onClick:gameIsRunning?function(){return handleAnswerSubmit();}:toggleGame},\"Click Here \")));};export default ZombieMath;","map":{"version":3,"sources":["C:/Users/Noah Wotring/Desktop/Code/portfolio/src/pages/ZombieMath.js"],"names":["React","useState","useContext","useEffect","UserContext","generateScore","ZombieMath","props","gameIsRunning","setRunGame","timeLeft","setTime","timerIsRunning","setTimer","score","changeScore","currentAnswer","changeAnswer","hp","setHealth","num1","num2","answer","numberSet","genNumbers","user","highScore","updateHighScore","allScores","updateAllScores","updateGenerateScores","then","result","filter","uid","sort","a","b","console","log","activateGame","generateNumbers","interval","setInterval","clearInterval","Math","floor","random","toggleGame","theWidth","document","querySelector","style","width","onChangeHandler","event","currentTarget","name","value","handleAnswerSubmit","toString","classList","add","addEventListener","removeTransition","handleKeyDown","e","key","target","remove","numberContainer","startButtonContainer","displayName"],"mappings":"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","sourcesContent":["import React, {useState,useContext,useEffect} from 'react';\r\nimport './css/zombie_math.css';\r\nimport {UserContext} from \"../providers/UserProvider\";\r\nimport {generateScore} from '../firebase.js';\r\n\r\nconst ZombieMath = (props) => {\r\n  const [gameIsRunning, setRunGame] = useState(false);\r\n  const [timeLeft,setTime] = useState(0);\r\n  const [timerIsRunning,setTimer] = useState(false);\r\n  const [score,changeScore] = useState(0);\r\n  const [currentAnswer,changeAnswer] = useState(\"\");\r\n  const [hp,setHealth] = useState(5);\r\n  const [numberSet, genNumbers] = useState({\r\n    num1: null,\r\n    num2: null,\r\n    answer: null\r\n  });\r\n  const user = useContext(UserContext);\r\n  const [highScore,updateHighScore] = useState(0);\r\n  const [allScores,updateAllScores] = useState([]);\r\n  const updateGenerateScores = () => {\r\n    generateScore().then(result => updateAllScores(result));\r\n    updateHighScore(user? allScores.filter(score => score.uid == user.uid).sort((a,b)=> a.score - b.score)[0] : allScores.sort((a,b) => a.score - b.score)[0]);\r\n    console.log(allScores);\r\n  }\r\n  useEffect(updateGenerateScores,[score])\r\n\r\n\r\n  //\r\n\r\n  //effect that checks game state, starts timer toggle on\r\n  // game is turned on\r\n  const activateGame = () => {\r\n    generateNumbers()\r\n    setHealth(5);\r\n    setTime(10);\r\n    setTimer(true)\r\n  }\r\n    useEffect(() => {\r\n      if(gameIsRunning){\r\n      activateGame()\r\n      }\r\n    },[gameIsRunning])\r\n  //countdown timer. after render/click/toggle game/toggle timer, this runs\r\n  useEffect(() => {\r\n    let interval = null;\r\n    if(timerIsRunning){\r\n      interval = setInterval(() => {\r\n        setTime(timeLeft - 1)\r\n      }, 1000)\r\n    }\r\n    if (timerIsRunning && timeLeft === 0 && hp >= 1){\r\n      setHealth(hp-1);\r\n      generateNumbers();\r\n      setTime(10);\r\n    }\r\n    if(timeLeft < 1 && hp < 1){\r\n      clearInterval(interval);\r\n      setRunGame(false)\r\n    }\r\n    if(hp === 0){\r\n        setRunGame(false);\r\n      if(user){\r\n        // send data + user\r\n\r\n      } else {\r\n        // send data\r\n      }\r\n      setRunGame(false);\r\n\r\n    }\r\n  },[timerIsRunning,timeLeft]);\r\n\r\n//number set generator\r\n  const generateNumbers = () => {\r\n        let num1 = Math.floor(Math.random() * 100);\r\n        let num2 = Math.floor(Math.random() * 100);\r\n        let answer = num1 + num2;\r\n        genNumbers({\r\n          num1: num1,\r\n          num2: num2,\r\n          answer: answer\r\n        })\r\n  }\r\n\r\n  const toggleGame = () => {\r\n      if(gameIsRunning === false){\r\n        setRunGame(!gameIsRunning)\r\n      } else {\r\n        setRunGame(!gameIsRunning)\r\n      }\r\n    }\r\n\r\n  useEffect(() => {\r\n    if(gameIsRunning){\r\n      let theWidth = hp * 20;\r\n      document.querySelector('.health').style.width = `${theWidth}%`;\r\n    }\r\n\r\n  },[hp])\r\n\r\n\r\n  const onChangeHandler = (event) => {\r\n    const {name,value} = event.currentTarget;\r\n    if(name === \"currentAnswer\"){\r\n      changeAnswer(value)\r\n    }\r\n  }\r\n\r\n  const handleAnswerSubmit = () => {\r\n    if(currentAnswer === numberSet.answer.toString()){\r\n      changeScore(score + 1);\r\n      setTime(10);\r\n      generateNumbers();\r\n      changeAnswer(\"\");\r\n    } else {\r\n      setHealth(hp-1);\r\n      setTime(10);\r\n      document.querySelector('.problemBlock').classList.add('hit');\r\n      document.querySelector('.problemBlock').addEventListener('transitionend', removeTransition);\r\n      generateNumbers();\r\n      changeAnswer(\"\");\r\n    }\r\n  }\r\n\r\n  const handleKeyDown = (e) => {\r\n    console.log(e.key)\r\n    if (e.key === \"Enter\"){\r\n      handleAnswerSubmit();\r\n    }\r\n  }\r\n  const removeTransition = (e) => {\r\n     e.target.classList.remove('hit')\r\n  }\r\n\r\n\r\n\r\n  //the containers\r\n  const numberContainer =\r\n    <div className=\"number container mx-0 problemBlock\">\r\n    <span className=\"healthbar health\">{hp * 20}% </span>\r\n      <span className=\"block text-6xl\"> <span className=\"num1 numblock inline-block text-6xl\">{numberSet.num1} </span> + <span className=\"num2 numblock text-6xl\">{numberSet.num2} =\r\n      <input\r\n\r\n        autoFocus\r\n        onKeyDown={e=>{handleKeyDown(e)}}\r\n        autocomplete=\"off\"\r\n        type=\"integer\"\r\n        className=\"w-1/12 text-black  \"\r\n        name=\"currentAnswer\"\r\n        value={currentAnswer}\r\n        placeholder=\"\"\r\n        id=\"answerAttempt\"\r\n        onChange = {(event)=> onChangeHandler(event)}\r\n        /> </span>\r\n      </span>\r\n      </div>\r\n      //<div className=\"bg-gray-400 w-1/2 h-32 container block my-auto mx-auto border border-red-200 relative\"> </div>\r\n\r\n      const startButtonContainer =\r\n      <button className=\" absolute bottom-0 right-0 border border-blue-500\" onClick={toggleGame}>Start Game </button>\r\n\r\n\r\n\r\n\r\n  return (\r\n      <div className=\"zombie_math_background text-center inline\">\r\n        <h1> {timeLeft} {hp} </h1>\r\n\r\n       <h1> Hello {user? `${user.displayName}` : \"Joe\"}, your score is <span className=\"bg-red-200 border-blue-300 border\">{score} </span> and your highest score is {highScore}</h1>\r\n       <div className=\"problemBlock\">\r\n        {gameIsRunning? numberContainer : startButtonContainer}\r\n\r\n        <button className=\"  border border-blue-500\" onClick={gameIsRunning? () => handleAnswerSubmit() : toggleGame }>Click Here </button>\r\n        </div>\r\n\r\n       </div>\r\n\r\n\r\n\r\n  )\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\nexport default ZombieMath;\r\n"]},"metadata":{},"sourceType":"module"}