{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Noah Wotring\\\\Desktop\\\\Code\\\\ReactUserDataPractice\\\\my-app\\\\src\\\\components\\\\SignIn.js\";\nimport React, { useState, useContext } from 'react';\nimport { BrowserRouter, Route, Switch, Link } from 'react-router-dom';\nimport { UserContext } from \"../providers/UserProvider\";\nimport { auth, session } from '../firebase.js';\nimport { signInWithGoogle } from '../firebase.js';\nimport { TheNumContext } from '../providers/NumberProvider';\n\nconst SignIn = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState(null);\n  const user = useContext(UserContext);\n\n  const persHandler = () => {\n    auth.setPersistence(auth.AUTH.Persistence.Session).then(() => {\n      auth.signInWithEmailAndPassword(email, password).catch(error => {\n        setError(\"Error signing in with password and email!\");\n        console.error(\"Error signing in with password and email\", error);\n      });\n    });\n  };\n\n  const signInWithEmailAndPasswordHandler = (event, email, password) => {\n    event.preventDefault();\n    persHandler();\n  };\n\n  const onChangeHandler = event => {\n    const {\n      name,\n      value\n    } = event.currentTarget;\n\n    if (name === 'userEmail') {\n      setEmail(value);\n    } else if (name === 'userPassword') {\n      setPassword(value);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-8 my-auto opacity-150 w-full absolute \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"text-3x1 mb-2 text-center font-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, \" Sign In \"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"border border-blue-400 mx-auto w-11/12 md:w-2/4 py-8 px-4 md:px-8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, error !== null && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"py-4 bg-red-600 w-full text-white text-center mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 28\n    }\n  }, error), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"userEmail\",\n    className: \"block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"email\",\n    className: \"my-1 p-1 w-full\",\n    name: \"userEmail\",\n    value: email,\n    placeholder: \"E.g: noah123@gmail.com\",\n    id: \"userEmail\",\n    onChange: event => onChangeHandler(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"userPassword\",\n    className: \"block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }, \"Password:\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"mt-1 mb-3 p-1 w-full\",\n    type: \"password\",\n    name: \"userPassword\",\n    value: password,\n    placeholder: \"E.g: derpdede123\",\n    onChange: event => onChangeHandler(event),\n    id: \"userPassword\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"bg-green-400 hover:bg-green-500 w-full py-2 text-white\",\n    onClick: event => {\n      signInWithEmailAndPasswordHandler(event, email, password);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }, \"Sign In\")), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-center my-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, \"or \"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => signInWithGoogle,\n    className: \"bg-red-500 hover:bg-red-600 w-full py-2 text-whitie\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, \"Sign in with Google\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-center my-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, \"Don't have an account?\", \" \", /*#__PURE__*/React.createElement(Link, {\n    to: \"/SignUp\",\n    className: \"text-blue-500 hover:text-blue-600\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }, \"Sign up here\"), \" \", \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }), \" \", \" \", /*#__PURE__*/React.createElement(Link, {\n    to: {\n      pathname: `/PasswordReset`\n    },\n    className: \"text-blue-500 hover:text-blue-600\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }, \"Forgot Password?\"))));\n};\n\nexport default SignIn;","map":{"version":3,"sources":["C:/Users/Noah Wotring/Desktop/Code/ReactUserDataPractice/my-app/src/components/SignIn.js"],"names":["React","useState","useContext","BrowserRouter","Route","Switch","Link","UserContext","auth","session","signInWithGoogle","TheNumContext","SignIn","email","setEmail","password","setPassword","error","setError","user","persHandler","setPersistence","AUTH","Persistence","Session","then","signInWithEmailAndPassword","catch","console","signInWithEmailAndPasswordHandler","event","preventDefault","onChangeHandler","name","value","currentTarget","pathname"],"mappings":"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","sourcesContent":["import React, {useState, useContext} from 'react';\r\nimport {BrowserRouter, Route, Switch, Link} from 'react-router-dom';\r\nimport {UserContext} from \"../providers/UserProvider\";\r\n\r\nimport {auth,session} from '../firebase.js';\r\nimport {signInWithGoogle} from '../firebase.js';\r\nimport {TheNumContext} from '../providers/NumberProvider';\r\n\r\n\r\n\r\nconst SignIn = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [error, setError] = useState(null);\r\n  const user = useContext(UserContext);\r\n  const persHandler = () => {\r\n    auth.setPersistence(auth.AUTH.Persistence.Session)\r\n      .then(() => {\r\n          auth.signInWithEmailAndPassword(email, password).catch(error => {\r\n            setError(\"Error signing in with password and email!\");\r\n            console.error(\"Error signing in with password and email\", error);\r\n          })\r\n      })\r\n  }\r\n  const signInWithEmailAndPasswordHandler =\r\n      (event,email,password) => {\r\n        event.preventDefault();\r\n        persHandler();\r\n\r\n\r\n\r\n      };\r\n  const onChangeHandler = (event) => {\r\n    const {name,value} = event.currentTarget;\r\n\r\n    if(name === 'userEmail'){\r\n      setEmail(value)\r\n    }\r\n    else if (name === 'userPassword'){\r\n      setPassword(value);\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"mt-8 my-auto opacity-150 w-full absolute \" >\r\n      <h1 className=\"text-3x1 mb-2 text-center font-bold\"> Sign In </h1>\r\n      <div className=\"border border-blue-400 mx-auto w-11/12 md:w-2/4 py-8 px-4 md:px-8\">\r\n        {error !== null && <div className=\"py-4 bg-red-600 w-full text-white text-center mb-3\">{error}</div>}\r\n        <form className=\"\">\r\n          <label htmlFor=\"userEmail\" className=\"block\">\r\n          </label>\r\n          <input\r\n            type=\"email\"\r\n            className=\"my-1 p-1 w-full\"\r\n            name=\"userEmail\"\r\n            value={email}\r\n            placeholder=\"E.g: noah123@gmail.com\"\r\n            id=\"userEmail\"\r\n            onChange = {(event)=> onChangeHandler(event)}\r\n            />\r\n            <br />\r\n            <br />\r\n\r\n          <label htmlFor=\"userPassword\" className=\"block\">\r\n            Password:\r\n          </label>\r\n          <input\r\n            className=\"mt-1 mb-3 p-1 w-full\"\r\n            type=\"password\"\r\n            name=\"userPassword\"\r\n            value={password}\r\n            placeholder=\"E.g: derpdede123\"\r\n            onChange={(event) => onChangeHandler(event)}\r\n            id=\"userPassword\"\r\n          />\r\n          <br />\r\n          <button className=\"bg-green-400 hover:bg-green-500 w-full py-2 text-white\" onClick = {(event) => {signInWithEmailAndPasswordHandler(event, email, password)}} >\r\n            Sign In\r\n          </button>\r\n        </form>\r\n        <p className=\"text-center my-3\">or </p>\r\n        <button\r\n          onClick={() => signInWithGoogle}\r\n          className=\"bg-red-500 hover:bg-red-600 w-full py-2 text-whitie\">\r\n          Sign in with Google\r\n        </button>\r\n        <p className=\"text-center my-3\">\r\n          Don't have an account?{\" \"}\r\n          <Link to=\"/SignUp\" className=\"text-blue-500 hover:text-blue-600\">\r\n            Sign up here\r\n          </Link> {\" \"}\r\n          <br /> {\" \"}\r\n          <Link to={{pathname: `/PasswordReset`}} className=\"text-blue-500 hover:text-blue-600\">\r\n            Forgot Password?\r\n          </Link>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default SignIn;\r\n"]},"metadata":{},"sourceType":"module"}